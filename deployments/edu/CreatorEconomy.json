{
  "address": "0x8C8D84fB7CE0B68b8f5525CcB10fe4a2387B9C06",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "interval",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currentBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numPlayers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "raffleState",
          "type": "uint256"
        }
      ],
      "name": "Milestones__UpkeepNotNeeded",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "name": "AllFundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "BalanceCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "BalanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CreatorsWithdrawl",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "milestone",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReleased",
          "type": "uint256"
        }
      ],
      "name": "MilestoneCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "OwnersWithdrawl",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PriceChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "product",
          "type": "string"
        }
      ],
      "name": "ProductCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "changeMileStonePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productId",
          "type": "string"
        }
      ],
      "name": "completeMilestone",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productId",
          "type": "string"
        }
      ],
      "name": "createProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "creatorsWithdrawl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "string[]",
              "name": "identifier_list",
              "type": "string[]"
            }
          ],
          "internalType": "struct CreatorEconomy.Creator_balance",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productId",
          "type": "string"
        }
      ],
      "name": "getIdentifier",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "fans",
              "type": "address[]"
            }
          ],
          "internalType": "struct CreatorEconomy.Product_identifiers",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIdentifiers",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwnerBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productId",
          "type": "string"
        }
      ],
      "name": "getUserMilestoneDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalMilestones",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "milestoneCompleted",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountWithdrawn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isCompleted",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "endsAt",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "product",
              "type": "string"
            }
          ],
          "internalType": "struct CreatorEconomy.Milestone",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "identifier",
          "type": "string"
        }
      ],
      "name": "lockFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ownersWithdrawl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x18552101b883b3eb72fcc429ed5e887cf9e9c4f98e8fdaf0499aa801bdd6e6d8",
  "receipt": {
    "to": null,
    "from": "0x5D62c548F71238634c94539B488d03405cC180A9",
    "contractAddress": "0x8C8D84fB7CE0B68b8f5525CcB10fe4a2387B9C06",
    "transactionIndex": 1,
    "gasUsed": "279636196",
    "logsBloom": "0x
    "blockHash": "0x339ea96708ee76019ece54ce13d83e248210f9b7d3136c664c3d610880a95659",
    "transactionHash": "0x18552101b883b3eb72fcc429ed5e887cf9e9c4f98e8fdaf0499aa801bdd6e6d8",
    "logs": [],
    "blockNumber": 33577980,
    "cumulativeGasUsed": "279636196",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5D62c548F71238634c94539B488d03405cC180A9",
    259200,
    "10000000000000"
  ],
  "numDeployments": 3,
  "solcInputHash": "7aba1d380f274ad1cdb513b5c4e352f5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numPlayers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raffleState\",\"type\":\"uint256\"}],\"name\":\"Milestones__UpkeepNotNeeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"AllFundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"BalanceCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"BalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CreatorsWithdrawl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"milestone\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReleased\",\"type\":\"uint256\"}],\"name\":\"MilestoneCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OwnersWithdrawl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PriceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"product\",\"type\":\"string\"}],\"name\":\"ProductCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeMileStonePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"completeMilestone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"createProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"creatorsWithdrawl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"identifier_list\",\"type\":\"string[]\"}],\"internalType\":\"struct CreatorEconomy.Creator_balance\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"getIdentifier\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"fans\",\"type\":\"address[]\"}],\"internalType\":\"struct CreatorEconomy.Product_identifiers\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIdentifiers\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"getUserMilestoneDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalMilestones\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"milestoneCompleted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"endsAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"product\",\"type\":\"string\"}],\"internalType\":\"struct CreatorEconomy.Milestone\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"}],\"name\":\"lockFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ownersWithdrawl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CreatorEconomy.sol\":\"CreatorEconomy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\"},\"contracts/CreatorEconomy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\\\";\\n//import \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n//import \\\"./PriceConverter.sol\\\";\\n//import \\\"hardhat/console.sol\\\";\\nerror Milestones__UpkeepNotNeeded(uint256 currentBalance, uint256 numPlayers, uint256 raffleState);\\n\\n\\ncontract CreatorEconomy is AutomationCompatibleInterface {\\n   \\n    enum MileStoneState {\\n        OPEN,\\n        CALCULATING\\n    } \\n\\n    struct Product_identifiers {\\n        address creator;\\n        address[] fans;\\n    }\\n\\n    struct Creator_balance {\\n        address creator;\\n        uint256 balance;\\n        string[] identifier_list;\\n    }\\n\\n    struct Milestone {\\n        address creator;\\n        uint256 totalMilestones;\\n        uint256 totalAmount;\\n        uint256 milestoneCompleted;\\n        uint256 amountWithdrawn;\\n        uint256 createdAt;\\n        bool isCompleted;\\n        uint256 endsAt;\\n        string product;\\n    }\\n\\n    mapping(string => Product_identifiers) private identifiers; \\n    mapping(address => Creator_balance) private balances; \\n    mapping(string => Milestone) private products;  \\n\\n    uint256 private constant MILESTONE_COUNT = 5;\\n    uint256 private constant PLATFORM_PERCENTAGE = 10; \\n    uint256 private constant CREATOR_PERCENTAGE = 50; \\n    uint256 private owner_balance ;\\n\\n    address private platformWallet;\\n    string[] private activeMilestones;\\n    string[] private activeIdentifiers;\\n\\n    uint256 private immutable i_interval;\\n    uint256 private s_lastTimeStamp;\\n    uint256 private s_milestone_price;\\n\\n    event FundsLocked(address indexed user, uint256 amount);\\n    event MilestoneCompleted(address indexed user, uint256 milestone, uint256 amountReleased);\\n    event AllFundsWithdrawn(address indexed user, uint256 totalAmount);\\n    event OwnersWithdrawl(address indexed creator, uint256 amount);\\n    event PriceChange(uint256 amount);\\n    event BalanceCreated(address creator);\\n    event BalanceUpdated(address creator);\\n    event ProductCreated(address creator, string product);\\n    event CreatorsWithdrawl(address indexed creator, uint256 amount);\\n\\n    MileStoneState private s_milestoneState;\\n\\n    constructor(address _platformWallet, uint256 interval, uint256 price) {\\n        require(_platformWallet != address(0), \\\"Invalid platform wallet\\\");\\n        platformWallet = _platformWallet;\\n        owner_balance = 0;\\n        s_lastTimeStamp = block.timestamp;\\n        i_interval = interval;\\n        s_milestone_price = price;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(platformWallet == msg.sender, \\\"Only the platform wallet can perform this action\\\");\\n        _;\\n    }\\n\\n    modifier onlyFans(string memory productId) {\\n        require(products[productId].creator == msg.sender, \\\"Only the creator wallet can perform this action\\\");\\n        _;\\n    }\\n\\n    modifier whenOpen() {\\n        require(s_milestoneState == MileStoneState.OPEN, \\\"Contract is in Upkeep\\\");\\n        _;\\n    }\\n\\n    function createProduct(string memory productId) external whenOpen() {\\n        //console.log(\\\"product Id\\\", productId);\\n        require(identifiers[productId].creator == address(0), \\\"Product Already Exists\\\");\\n        activeIdentifiers.push(productId);\\n\\n        if (balances[msg.sender].creator == address(0)) {\\n            // First time creator\\n            balances[msg.sender].creator = msg.sender;\\n            balances[msg.sender].balance = 0;\\n            delete balances[msg.sender].identifier_list;\\n            //console.log(\\\"product Id before pushing\\\", productId);\\n            balances[msg.sender].identifier_list.push(productId);\\n            emit BalanceCreated(msg.sender);\\n        } else {\\n            balances[msg.sender].identifier_list.push(productId);\\n            emit BalanceUpdated(msg.sender);\\n        }\\n\\n        address[] memory fansArray = new address[](0);\\n        identifiers[productId] = Product_identifiers({\\n            creator: msg.sender,\\n            fans: fansArray\\n        });\\n\\n        emit ProductCreated(msg.sender, productId);\\n    }\\n\\n    function lockFunds(string memory productId, string memory identifier) external whenOpen() payable {\\n        require(identifiers[identifier].creator != address(0), \\\"No articles exist\\\");\\n        require(msg.value >= s_milestone_price, \\\"Sent amount must be higher than entry fee\\\");\\n        require(products[productId].totalAmount == 0, \\\"User already locked funds\\\");\\n\\n        activeMilestones.push(productId);\\n        uint256 fee = (msg.value * CREATOR_PERCENTAGE) / 100;\\n        uint256 netAmount = msg.value - fee;\\n        uint256 endsAt = block.timestamp + 3600*24*7;\\n\\n        \\n        balances[msg.sender].balance += fee;\\n        identifiers[identifier].fans.push(msg.sender);\\n\\n        products[productId] = Milestone({\\n            creator: msg.sender,\\n            totalMilestones: MILESTONE_COUNT, \\n            totalAmount: netAmount,\\n            milestoneCompleted: 0,\\n            amountWithdrawn: 0,\\n            createdAt: block.timestamp,\\n            isCompleted: false,\\n            endsAt: endsAt,\\n            product: identifier\\n        });\\n\\n        emit FundsLocked(msg.sender, netAmount);\\n    }\\n\\n    function checkUpkeep(bytes memory)\\n        public\\n        view\\n        override\\n        returns (bool upkeepNeeded, bytes memory  )\\n    {\\n        bool isOpen = MileStoneState.OPEN == s_milestoneState;\\n        bool timePassed = ((block.timestamp - s_lastTimeStamp) > i_interval);\\n        bool hasActiveMilestones = activeMilestones.length > 0;\\n        bool hasBalance = address(this).balance > 0;\\n        upkeepNeeded = (timePassed && isOpen && hasBalance && hasActiveMilestones);\\n        return (upkeepNeeded, \\\"0x0\\\"); \\n    }  \\n\\n    function performUpkeep(bytes calldata) external override {\\n        (bool upkeepNeeded,) = checkUpkeep(\\\"\\\");\\n         require(upkeepNeeded, \\\"Upkeep not needed\\\");\\n        if (!upkeepNeeded) {\\n            revert Milestones__UpkeepNotNeeded(address(this).balance, activeMilestones.length, uint256(s_milestoneState));\\n        }\\n        s_milestoneState = MileStoneState.CALCULATING;\\n        string[] memory copiedActiveMilestone = activeMilestones;\\n        uint256 temp_owner_balance = owner_balance;\\n        uint256 j;\\n        j = 0;\\n        string[] memory updatedMileStones = new string[](copiedActiveMilestone.length); \\n                \\n        for (uint256 i = 0; i < copiedActiveMilestone.length; i++) {\\n            string memory milestoneId = copiedActiveMilestone[i];\\n            Milestone storage milestone = products[milestoneId];\\n                    \\n            if (milestone.endsAt > block.timestamp) {\\n                updatedMileStones[j] = milestoneId;\\n                j++;\\n            } else {\\n                temp_owner_balance += milestone.totalAmount - milestone.amountWithdrawn;\\n            }\\n        }\\n        if (j < updatedMileStones.length) {\\n            string[] memory resizedMileStones = new string[](j);\\n            for (uint256 i = 0; i < j; i++) {\\n                resizedMileStones[i] = updatedMileStones[i];\\n            }\\n            activeMilestones = resizedMileStones;\\n        }\\n        owner_balance = temp_owner_balance;\\n        s_milestoneState = MileStoneState.OPEN;\\n    }  \\n\\n    function completeMilestone(string memory productId) external whenOpen() onlyFans(productId){\\n        Milestone storage product = products[productId];\\n        require(product.totalAmount > 0, \\\"No funds locked\\\");\\n        require(product.endsAt >= block.timestamp, \\\"Milestone Expired\\\");\\n        require(product.milestoneCompleted < product.totalMilestones, \\\"All milestones already completed\\\");\\n\\n        uint256 milestoneAmount = product.totalAmount / product.totalMilestones;\\n        product.milestoneCompleted++;\\n\\n        if (product.milestoneCompleted == product.totalMilestones) {\\n            string[] memory copiedActiveMilestone = activeMilestones;\\n            string[] memory updatedMileStones = new string[] (copiedActiveMilestone.length - 1);\\n            uint256 j;\\n            j = 0;\\n            for (uint256 i = 0; i < copiedActiveMilestone.length; i++){\\n                if (keccak256(abi.encodePacked(copiedActiveMilestone[i])) != keccak256(abi.encodePacked(productId))) {\\n                    updatedMileStones[j] = copiedActiveMilestone[i];\\n                    j+=1;\\n                }\\n            }\\n            activeMilestones = updatedMileStones;\\n\\n            uint256 remainingAmount = product.totalAmount - product.amountWithdrawn;\\n            product.amountWithdrawn += remainingAmount;\\n            product.isCompleted = true;\\n            payable(msg.sender).transfer(remainingAmount);\\n            emit AllFundsWithdrawn(msg.sender, product.totalAmount);\\n        } else {\\n            product.amountWithdrawn += milestoneAmount;\\n            payable(msg.sender).transfer(milestoneAmount);\\n            emit MilestoneCompleted(msg.sender, product.milestoneCompleted, milestoneAmount);\\n        }\\n    }\\n\\n    function ownersWithdrawl( uint256 amount) external whenOpen() onlyOwner() {\\n        require(amount <= owner_balance * 70 / 100, \\\"Amount exceeds collectable funds\\\");\\n        payable(msg.sender).transfer(amount);\\n        owner_balance -= amount;\\n        emit OwnersWithdrawl(msg.sender, amount);\\n    }\\n\\n    function creatorsWithdrawl( uint256 amount) external {\\n        Creator_balance storage balance = balances[msg.sender];\\n        require(amount <= balance.balance, \\\"Amount exceeds collecteables funds\\\");\\n        require(msg.sender == balance.creator, \\\"Amount exceeds collected funds\\\");\\n        payable(msg.sender).transfer(amount);\\n        balance.balance -= amount;\\n        balances[msg.sender] = balance;\\n        emit CreatorsWithdrawl(msg.sender, amount);\\n    }\\n\\n    function changeMileStonePrice( uint256 amount) external whenOpen() onlyOwner() {\\n        s_milestone_price = amount;\\n        emit PriceChange(amount);\\n    }\\n\\n    function getUserMilestoneDetails(string memory productId) public view returns (Milestone memory) {\\n        return products[productId];\\n    }\\n\\n    function getCurrentTimestamp() public view returns (uint256) {\\n        return block.timestamp;\\n    }\\n\\n    function getOwnerBalance() public view onlyOwner() returns (uint256) {\\n        return owner_balance;\\n    }\\n\\n    function getIdentifiers() public view  returns (string[] memory) {\\n        return activeIdentifiers;\\n    }\\n\\n    function getIdentifier(string memory productId) public view  returns (Product_identifiers memory) {\\n        return identifiers[productId];\\n    }\\n\\n    function getBalance() public view  returns (Creator_balance memory) {\\n        return balances[msg.sender];\\n    }\\n\\n    function getPrice() public view returns (uint256) {\\n        uint256 minimumUSD =  s_milestone_price; \\n        return minimumUSD ;   \\n    }\\n}\\n\",\"keccak256\":\"0x2d7767ba50c4661009d0957d51c7727cbad6fc08199656b95b5e7b3ccb726d01\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051614104380380614104833981810160405281019061003291906101a1565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036100a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009890610251565b60405180910390fd5b82600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060038190555042600781905550816080818152505080600881905550505050610271565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101388261010d565b9050919050565b6101488161012d565b811461015357600080fd5b50565b6000815190506101658161013f565b92915050565b6000819050919050565b61017e8161016b565b811461018957600080fd5b50565b60008151905061019b81610175565b92915050565b6000806000606084860312156101ba576101b9610108565b5b60006101c886828701610156565b93505060206101d98682870161018c565b92505060406101ea8682870161018c565b9150509250925092565b600082825260208201905092915050565b7f496e76616c696420706c6174666f726d2077616c6c6574000000000000000000600082015250565b600061023b6017836101f4565b915061024682610205565b602082019050919050565b6000602082019050818103600083015261026a8161022e565b9050919050565b608051613e7861028c60003960006115750152613e786000f3fe6080604052600436106100e85760003560e01c8063590791f21161008a57806398d5fdca1161005957806398d5fdca146102f3578063a4770a881461031e578063ba4be20b14610349578063ffcd186a14610365576100e8565b8063590791f2146102365780636c9230db146102615780636e04ff0d1461028c5780638dd8fc0e146102ca576100e8565b806312065fe0116100c657806312065fe01461017c57806315a857cc146101a75780634585e33b146101e45780634e2de6731461020d576100e8565b8063019b61ed146100ed57806302ec06be1461012a57806304afe05f14610153575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f919061287c565b61038e565b6040516101219190612a7e565b60405180910390f35b34801561013657600080fd5b50610151600480360381019061014c919061287c565b610506565b005b34801561015f57600080fd5b5061017a60048036038101906101759190612acc565b610aa6565b005b34801561018857600080fd5b50610191610bed565b60405161019e9190612c0b565b60405180910390f35b3480156101b357600080fd5b506101ce60048036038101906101c9919061287c565b610d7d565b6040516101db9190612d19565b60405180910390f35b3480156101f057600080fd5b5061020b60048036038101906102069190612d9b565b610e99565b005b34801561021957600080fd5b50610234600480360381019061022f9190612acc565b61127c565b005b34801561024257600080fd5b5061024b611490565b6040516102589190612df7565b60405180910390f35b34801561026d57600080fd5b5061027661152a565b6040516102839190612df7565b60405180910390f35b34801561029857600080fd5b506102b360048036038101906102ae9190612eb3565b611532565b6040516102c1929190612f60565b60405180910390f35b3480156102d657600080fd5b506102f160048036038101906102ec919061287c565b61161a565b005b3480156102ff57600080fd5b50610308611c47565b6040516103159190612df7565b60405180910390f35b34801561032a57600080fd5b50610333611c56565b6040516103409190613016565b60405180910390f35b610363600480360381019061035e9190613038565b611d2f565b005b34801561037157600080fd5b5061038c60048036038101906103879190612acc565b6121da565b005b610396612475565b6002826040516103a691906130ec565b9081526020016040518091039020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016007820154815260200160088201805461047d90613132565b80601f01602080910402602001604051908101604052809291908181526020018280546104a990613132565b80156104f65780601f106104cb576101008083540402835291602001916104f6565b820191906000526020600020905b8154815290600101906020018083116104d957829003601f168201915b5050505050815250509050919050565b6000600181111561051a57610519613163565b5b600960009054906101000a900460ff16600181111561053c5761053b613163565b5b1461057c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610573906131ef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000826040516105a491906130ec565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461062c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106239061325b565b60405180910390fd5b6006819080600181540180825580915050600190039060005260206000200160009091909190915090816106609190613427565b50600073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036108bf5733600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600061080e91906124d9565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819080600181540180825580915050600190039060005260206000200160009091909190915090816108829190613427565b507faa66ab936168352c3ceec0936784009b98fff8330552a84dbec0ef7b8bcd6873336040516108b29190613508565b60405180910390a161096c565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819080600181540180825580915050600190039060005260206000200160009091909190915090816109339190613427565b507f13bc0fcf14f8f3ca0cb562786d0618c57a13e52bbdb4c041763d96acbfa07624336040516109639190613508565b60405180910390a15b60008067ffffffffffffffff81111561098857610987612751565b5b6040519080825280602002602001820160405280156109b65781602001602082028036833780820191505090505b50905060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001828152506000836040516109f491906130ec565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610a659291906124fa565b509050507ff866739ea10ca100bc6c13c9c14f5d62f2bea1919a42d92e4bc3e98fbeba621e3383604051610a9a92919061355c565b60405180910390a15050565b60006001811115610aba57610ab9613163565b5b600960009054906101000a900460ff166001811115610adc57610adb613163565b5b14610b1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b13906131ef565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba3906135fe565b60405180910390fd5b806008819055507ff347ee99503bf19c028bd6b18f3c676e82a9bb5b2bb5225aebe0fd62fd6a0d1981604051610be29190612df7565b60405180910390a150565b610bf5612584565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610d70578382906000526020600020018054610ce390613132565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0f90613132565b8015610d5c5780601f10610d3157610100808354040283529160200191610d5c565b820191906000526020600020905b815481529060010190602001808311610d3f57829003601f168201915b505050505081526020019060010190610cc4565b5050505081525050905090565b610d856125bb565b600082604051610d9591906130ec565b90815260200160405180910390206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020018280548015610e8957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610e3f575b5050505050815250509050919050565b6000610eb360405180602001604052806000815250611532565b50905080610ef6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eed9061366a565b60405180910390fd5b80610f625747600580549050600960009054906101000a900460ff166001811115610f2457610f23613163565b5b6040517f50ca6743000000000000000000000000000000000000000000000000000000008152600401610f599392919061368a565b60405180910390fd5b6001600960006101000a81548160ff02191690836001811115610f8857610f87613163565b5b021790555060006005805480602002602001604051908101604052809291908181526020016000905b8282101561105d578382906000526020600020018054610fd090613132565b80601f0160208091040260200160405190810160405280929190818152602001828054610ffc90613132565b80156110495780601f1061101e57610100808354040283529160200191611049565b820191906000526020600020905b81548152906001019060200180831161102c57829003601f168201915b505050505081526020019060010190610fb1565b50505050905060006003549050600080835167ffffffffffffffff81111561108857611087612751565b5b6040519080825280602002602001820160405280156110bb57816020015b60608152602001906001900390816110a65790505b50905060005b845181101561117a5760008582815181106110df576110de6136c1565b5b6020026020010151905060006002826040516110fb91906130ec565b908152602001604051809103902090504281600701541115611149578184868151811061112b5761112a6136c1565b5b602002602001018190525084806111419061371f565b95505061116b565b8060040154816002015461115d9190613767565b86611168919061379b565b95505b505080806001019150506110c1565b5080518210156112415760008267ffffffffffffffff8111156111a05761119f612751565b5b6040519080825280602002602001820160405280156111d357816020015b60608152602001906001900390816111be5790505b50905060005b83811015611227578281815181106111f4576111f36136c1565b5b602002602001015182828151811061120f5761120e6136c1565b5b602002602001018190525080806001019150506111d9565b50806005908051906020019061123e9291906125eb565b50505b826003819055506000600960006101000a81548160ff0219169083600181111561126e5761126d613163565b5b021790555050505050505050565b600060018111156112905761128f613163565b5b600960009054906101000a900460ff1660018111156112b2576112b1613163565b5b146112f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e9906131ef565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611382576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611379906135fe565b60405180910390fd5b6064604660035461139391906137cf565b61139d9190613840565b8111156113df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d6906138bd565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611425573d6000803e3d6000fd5b5080600360008282546114389190613767565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fd6f42bc80d79f51c5ffb3438f457e9355868cd0f02ccdd4d946494f962f4ac07826040516114859190612df7565b60405180910390a250565b60003373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611522576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611519906135fe565b60405180910390fd5b600354905090565b600042905090565b600060606000600960009054906101000a900460ff16600181111561155a57611559613163565b5b6000600181111561156e5761156d613163565b5b14905060007f0000000000000000000000000000000000000000000000000000000000000000600754426115a29190613767565b119050600080600580549050119050600080471190508280156115c25750835b80156115cb5750805b80156115d45750815b9550856040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152509550955050505050915091565b6000600181111561162e5761162d613163565b5b600960009054906101000a900460ff1660018111156116505761164f613163565b5b14611690576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611687906131ef565b60405180910390fd5b803373ffffffffffffffffffffffffffffffffffffffff166002826040516116b891906130ec565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611740576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117379061394f565b60405180910390fd5b600060028360405161175291906130ec565b9081526020016040518091039020905060008160020154116117a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a0906139bb565b60405180910390fd5b42816007015410156117f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e790613a27565b60405180910390fd5b806001015481600301541061183a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183190613a93565b60405180910390fd5b6000816001015482600201546118509190613840565b90508160030160008154809291906118679061371f565b91905055508160010154826003015403611b8a5760006005805480602002602001604051908101604052809291908181526020016000905b8282101561194b5783829060005260206000200180546118be90613132565b80601f01602080910402602001604051908101604052809291908181526020018280546118ea90613132565b80156119375780601f1061190c57610100808354040283529160200191611937565b820191906000526020600020905b81548152906001019060200180831161191a57829003601f168201915b50505050508152602001906001019061189f565b5050505090506000600182516119619190613767565b67ffffffffffffffff81111561197a57611979612751565b5b6040519080825280602002602001820160405280156119ad57816020015b60608152602001906001900390816119985790505b5090506000805b8351811015611a8057876040516020016119ce91906130ec565b604051602081830303815290604052805190602001208482815181106119f7576119f66136c1565b5b6020026020010151604051602001611a0f91906130ec565b6040516020818303038152906040528051906020012014611a7357838181518110611a3d57611a3c6136c1565b5b6020026020010151838381518110611a5857611a576136c1565b5b6020026020010181905250600182611a70919061379b565b91505b80806001019150506119b4565b508160059080519060200190611a979291906125eb565b50600085600401548660020154611aae9190613767565b905080866004016000828254611ac4919061379b565b9250508190555060018660060160006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611b2e573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167fd867cfadc420a62f8ddbfaf0ee08af17bef908fdeb647de660511cebe642486c8760020154604051611b799190612df7565b60405180910390a250505050611c41565b80826004016000828254611b9e919061379b565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611beb573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167ff43bfc498688ec8f5ca2efe35ba87cb7b4f33c139cb2dc8e3f795527e3f08ccc836003015483604051611c38929190613ab3565b60405180910390a25b50505050565b60008060085490508091505090565b60606006805480602002602001604051908101604052809291908181526020016000905b82821015611d26578382906000526020600020018054611c9990613132565b80601f0160208091040260200160405190810160405280929190818152602001828054611cc590613132565b8015611d125780601f10611ce757610100808354040283529160200191611d12565b820191906000526020600020905b815481529060010190602001808311611cf557829003601f168201915b505050505081526020019060010190611c7a565b50505050905090565b60006001811115611d4357611d42613163565b5b600960009054906101000a900460ff166001811115611d6557611d64613163565b5b14611da5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9c906131ef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600082604051611dcd91906130ec565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611e55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4c90613b28565b60405180910390fd5b600854341015611e9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9190613bba565b60405180910390fd5b6000600283604051611eac91906130ec565b90815260200160405180910390206002015414611efe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ef590613c26565b60405180910390fd5b600582908060018154018082558091505060019003906000526020600020016000909190919091509081611f329190613427565b5060006064603234611f4491906137cf565b611f4e9190613840565b905060008134611f5e9190613767565b9050600062093a8042611f71919061379b565b905082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254611fc5919061379b565b92505081905550600084604051611fdc91906130ec565b9081526020016040518091039020600101339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600581526020018381526020016000815260200160008152602001428152602001600015158152602001828152602001858152506002866040516120ba91906130ec565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e082015181600701556101008201518160080190816121819190613427565b509050503373ffffffffffffffffffffffffffffffffffffffff167f1423e2a671bcc71c56f3c3cb78e3c96473d3ca5eb061acd0b93d1d0a6617f658836040516121cb9190612df7565b60405180910390a25050505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010154821115612264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161225b90613cb8565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146122f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122ed90613d24565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561233c573d6000803e3d6000fd5b50818160010160008282546123519190613767565b9250508190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201548160010155600282018160020190805461241f929190612644565b509050503373ffffffffffffffffffffffffffffffffffffffff167f3418edea3cedd14ff3ff0e4b7a89699efa06ed87c31c8e3b75b2c6a020c68f2d836040516124699190612df7565b60405180910390a25050565b604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001606081525090565b50805460008255906000526020600020908101906124f791906126a1565b50565b828054828255906000526020600020908101928215612573579160200282015b828111156125725782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061251a565b5b50905061258091906126c5565b5090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b828054828255906000526020600020908101928215612633579160200282015b828111156126325782518290816126229190613427565b509160200191906001019061260b565b5b50905061264091906126a1565b5090565b8280548282559060005260206000209081019282156126905760005260206000209182015b8281111561268f578282908161267f9190613d5a565b5091600101919060010190612669565b5b50905061269d91906126a1565b5090565b5b808211156126c157600081816126b891906126e2565b506001016126a2565b5090565b5b808211156126de5760008160009055506001016126c6565b5090565b5080546126ee90613132565b6000825580601f10612700575061271f565b601f01602090049060005260206000209081019061271e91906126c5565b5b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61278982612740565b810181811067ffffffffffffffff821117156127a8576127a7612751565b5b80604052505050565b60006127bb612722565b90506127c78282612780565b919050565b600067ffffffffffffffff8211156127e7576127e6612751565b5b6127f082612740565b9050602081019050919050565b82818337600083830152505050565b600061281f61281a846127cc565b6127b1565b90508281526020810184848401111561283b5761283a61273b565b5b6128468482856127fd565b509392505050565b600082601f83011261286357612862612736565b5b813561287384826020860161280c565b91505092915050565b6000602082840312156128925761289161272c565b5b600082013567ffffffffffffffff8111156128b0576128af612731565b5b6128bc8482850161284e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006128f0826128c5565b9050919050565b612900816128e5565b82525050565b6000819050919050565b61291981612906565b82525050565b60008115159050919050565b6129348161291f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612974578082015181840152602081019050612959565b60008484015250505050565b600061298b8261293a565b6129958185612945565b93506129a5818560208601612956565b6129ae81612740565b840191505092915050565b6000610120830160008301516129d260008601826128f7565b5060208301516129e56020860182612910565b5060408301516129f86040860182612910565b506060830151612a0b6060860182612910565b506080830151612a1e6080860182612910565b5060a0830151612a3160a0860182612910565b5060c0830151612a4460c086018261292b565b5060e0830151612a5760e0860182612910565b50610100830151848203610100860152612a718282612980565b9150508091505092915050565b60006020820190508181036000830152612a9881846129b9565b905092915050565b612aa981612906565b8114612ab457600080fd5b50565b600081359050612ac681612aa0565b92915050565b600060208284031215612ae257612ae161272c565b5b6000612af084828501612ab7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612b318383612980565b905092915050565b6000602082019050919050565b6000612b5182612af9565b612b5b8185612b04565b935083602082028501612b6d85612b15565b8060005b85811015612ba95784840389528151612b8a8582612b25565b9450612b9583612b39565b925060208a01995050600181019050612b71565b50829750879550505050505092915050565b6000606083016000830151612bd360008601826128f7565b506020830151612be66020860182612910565b5060408301518482036040860152612bfe8282612b46565b9150508091505092915050565b60006020820190508181036000830152612c258184612bbb565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612c6583836128f7565b60208301905092915050565b6000602082019050919050565b6000612c8982612c2d565b612c938185612c38565b9350612c9e83612c49565b8060005b83811015612ccf578151612cb68882612c59565b9750612cc183612c71565b925050600181019050612ca2565b5085935050505092915050565b6000604083016000830151612cf460008601826128f7565b5060208301518482036020860152612d0c8282612c7e565b9150508091505092915050565b60006020820190508181036000830152612d338184612cdc565b905092915050565b600080fd5b600080fd5b60008083601f840112612d5b57612d5a612736565b5b8235905067ffffffffffffffff811115612d7857612d77612d3b565b5b602083019150836001820283011115612d9457612d93612d40565b5b9250929050565b60008060208385031215612db257612db161272c565b5b600083013567ffffffffffffffff811115612dd057612dcf612731565b5b612ddc85828601612d45565b92509250509250929050565b612df181612906565b82525050565b6000602082019050612e0c6000830184612de8565b92915050565b600067ffffffffffffffff821115612e2d57612e2c612751565b5b612e3682612740565b9050602081019050919050565b6000612e56612e5184612e12565b6127b1565b905082815260208101848484011115612e7257612e7161273b565b5b612e7d8482856127fd565b509392505050565b600082601f830112612e9a57612e99612736565b5b8135612eaa848260208601612e43565b91505092915050565b600060208284031215612ec957612ec861272c565b5b600082013567ffffffffffffffff811115612ee757612ee6612731565b5b612ef384828501612e85565b91505092915050565b612f058161291f565b82525050565b600081519050919050565b600082825260208201905092915050565b6000612f3282612f0b565b612f3c8185612f16565b9350612f4c818560208601612956565b612f5581612740565b840191505092915050565b6000604082019050612f756000830185612efc565b8181036020830152612f878184612f27565b90509392505050565b600082825260208201905092915050565b6000612fac82612af9565b612fb68185612f90565b935083602082028501612fc885612b15565b8060005b858110156130045784840389528151612fe58582612b25565b9450612ff083612b39565b925060208a01995050600181019050612fcc565b50829750879550505050505092915050565b600060208201905081810360008301526130308184612fa1565b905092915050565b6000806040838503121561304f5761304e61272c565b5b600083013567ffffffffffffffff81111561306d5761306c612731565b5b6130798582860161284e565b925050602083013567ffffffffffffffff81111561309a57613099612731565b5b6130a68582860161284e565b9150509250929050565b600081905092915050565b60006130c68261293a565b6130d081856130b0565b93506130e0818560208601612956565b80840191505092915050565b60006130f882846130bb565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061314a57607f821691505b60208210810361315d5761315c613103565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f436f6e747261637420697320696e2055706b6565700000000000000000000000600082015250565b60006131d9601583613192565b91506131e4826131a3565b602082019050919050565b60006020820190508181036000830152613208816131cc565b9050919050565b7f50726f6475637420416c72656164792045786973747300000000000000000000600082015250565b6000613245601683613192565b91506132508261320f565b602082019050919050565b6000602082019050818103600083015261327481613238565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026132dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826132a0565b6132e786836132a0565b95508019841693508086168417925050509392505050565b6000819050919050565b600061332461331f61331a84612906565b6132ff565b612906565b9050919050565b6000819050919050565b61333e83613309565b61335261334a8261332b565b8484546132ad565b825550505050565b600090565b61336761335a565b613372818484613335565b505050565b5b818110156133965761338b60008261335f565b600181019050613378565b5050565b601f8211156133db576133ac8161327b565b6133b584613290565b810160208510156133c4578190505b6133d86133d085613290565b830182613377565b50505b505050565b600082821c905092915050565b60006133fe600019846008026133e0565b1980831691505092915050565b600061341783836133ed565b9150826002028217905092915050565b6134308261293a565b67ffffffffffffffff81111561344957613448612751565b5b6134538254613132565b61345e82828561339a565b600060209050601f831160018114613491576000841561347f578287015190505b613489858261340b565b8655506134f1565b601f19841661349f8661327b565b60005b828110156134c7578489015182556001820191506020850194506020810190506134a2565b868310156134e457848901516134e0601f8916826133ed565b8355505b6001600288020188555050505b505050505050565b613502816128e5565b82525050565b600060208201905061351d60008301846134f9565b92915050565b600061352e8261293a565b6135388185613192565b9350613548818560208601612956565b61355181612740565b840191505092915050565b600060408201905061357160008301856134f9565b81810360208301526135838184613523565b90509392505050565b7f4f6e6c792074686520706c6174666f726d2077616c6c65742063616e2070657260008201527f666f726d207468697320616374696f6e00000000000000000000000000000000602082015250565b60006135e8603083613192565b91506135f38261358c565b604082019050919050565b60006020820190508181036000830152613617816135db565b9050919050565b7f55706b656570206e6f74206e6565646564000000000000000000000000000000600082015250565b6000613654601183613192565b915061365f8261361e565b602082019050919050565b6000602082019050818103600083015261368381613647565b9050919050565b600060608201905061369f6000830186612de8565b6136ac6020830185612de8565b6136b96040830184612de8565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061372a82612906565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361375c5761375b6136f0565b5b600182019050919050565b600061377282612906565b915061377d83612906565b9250828203905081811115613795576137946136f0565b5b92915050565b60006137a682612906565b91506137b183612906565b92508282019050808211156137c9576137c86136f0565b5b92915050565b60006137da82612906565b91506137e583612906565b92508282026137f381612906565b9150828204841483151761380a576138096136f0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061384b82612906565b915061385683612906565b92508261386657613865613811565b5b828204905092915050565b7f416d6f756e74206578636565647320636f6c6c65637461626c652066756e6473600082015250565b60006138a7602083613192565b91506138b282613871565b602082019050919050565b600060208201905081810360008301526138d68161389a565b9050919050565b7f4f6e6c79207468652063726561746f722077616c6c65742063616e207065726660008201527f6f726d207468697320616374696f6e0000000000000000000000000000000000602082015250565b6000613939602f83613192565b9150613944826138dd565b604082019050919050565b600060208201905081810360008301526139688161392c565b9050919050565b7f4e6f2066756e6473206c6f636b65640000000000000000000000000000000000600082015250565b60006139a5600f83613192565b91506139b08261396f565b602082019050919050565b600060208201905081810360008301526139d481613998565b9050919050565b7f4d696c6573746f6e652045787069726564000000000000000000000000000000600082015250565b6000613a11601183613192565b9150613a1c826139db565b602082019050919050565b60006020820190508181036000830152613a4081613a04565b9050919050565b7f416c6c206d696c6573746f6e657320616c726561647920636f6d706c65746564600082015250565b6000613a7d602083613192565b9150613a8882613a47565b602082019050919050565b60006020820190508181036000830152613aac81613a70565b9050919050565b6000604082019050613ac86000830185612de8565b613ad56020830184612de8565b9392505050565b7f4e6f2061727469636c6573206578697374000000000000000000000000000000600082015250565b6000613b12601183613192565b9150613b1d82613adc565b602082019050919050565b60006020820190508181036000830152613b4181613b05565b9050919050565b7f53656e7420616d6f756e74206d75737420626520686967686572207468616e2060008201527f656e747279206665650000000000000000000000000000000000000000000000602082015250565b6000613ba4602983613192565b9150613baf82613b48565b604082019050919050565b60006020820190508181036000830152613bd381613b97565b9050919050565b7f5573657220616c7265616479206c6f636b65642066756e647300000000000000600082015250565b6000613c10601983613192565b9150613c1b82613bda565b602082019050919050565b60006020820190508181036000830152613c3f81613c03565b9050919050565b7f416d6f756e74206578636565647320636f6c6c6563746561626c65732066756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b6000613ca2602283613192565b9150613cad82613c46565b604082019050919050565b60006020820190508181036000830152613cd181613c95565b9050919050565b7f416d6f756e74206578636565647320636f6c6c65637465642066756e64730000600082015250565b6000613d0e601e83613192565b9150613d1982613cd8565b602082019050919050565b60006020820190508181036000830152613d3d81613d01565b9050919050565b600081549050613d5381613132565b9050919050565b818103613d68575050613e40565b613d7182613d44565b67ffffffffffffffff811115613d8a57613d89612751565b5b613d948254613132565b613d9f82828561339a565b6000601f831160018114613dce5760008415613dbc578287015490505b613dc6858261340b565b865550613e39565b601f198416613ddc8761327b565b9650613de78661327b565b60005b82811015613e0f57848901548255600182019150600185019450602081019050613dea565b86831015613e2c5784890154613e28601f8916826133ed565b8355505b6001600288020188555050505b5050505050505b56fea26469706673582212204e557e9d0912f5001f0ae4771034d053e453d2b1ceb2f929f565dc8f5c2dbc4964736f6c634300081c0033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c8063590791f21161008a57806398d5fdca1161005957806398d5fdca146102f3578063a4770a881461031e578063ba4be20b14610349578063ffcd186a14610365576100e8565b8063590791f2146102365780636c9230db146102615780636e04ff0d1461028c5780638dd8fc0e146102ca576100e8565b806312065fe0116100c657806312065fe01461017c57806315a857cc146101a75780634585e33b146101e45780634e2de6731461020d576100e8565b8063019b61ed146100ed57806302ec06be1461012a57806304afe05f14610153575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f919061287c565b61038e565b6040516101219190612a7e565b60405180910390f35b34801561013657600080fd5b50610151600480360381019061014c919061287c565b610506565b005b34801561015f57600080fd5b5061017a60048036038101906101759190612acc565b610aa6565b005b34801561018857600080fd5b50610191610bed565b60405161019e9190612c0b565b60405180910390f35b3480156101b357600080fd5b506101ce60048036038101906101c9919061287c565b610d7d565b6040516101db9190612d19565b60405180910390f35b3480156101f057600080fd5b5061020b60048036038101906102069190612d9b565b610e99565b005b34801561021957600080fd5b50610234600480360381019061022f9190612acc565b61127c565b005b34801561024257600080fd5b5061024b611490565b6040516102589190612df7565b60405180910390f35b34801561026d57600080fd5b5061027661152a565b6040516102839190612df7565b60405180910390f35b34801561029857600080fd5b506102b360048036038101906102ae9190612eb3565b611532565b6040516102c1929190612f60565b60405180910390f35b3480156102d657600080fd5b506102f160048036038101906102ec919061287c565b61161a565b005b3480156102ff57600080fd5b50610308611c47565b6040516103159190612df7565b60405180910390f35b34801561032a57600080fd5b50610333611c56565b6040516103409190613016565b60405180910390f35b610363600480360381019061035e9190613038565b611d2f565b005b34801561037157600080fd5b5061038c60048036038101906103879190612acc565b6121da565b005b610396612475565b6002826040516103a691906130ec565b9081526020016040518091039020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016007820154815260200160088201805461047d90613132565b80601f01602080910402602001604051908101604052809291908181526020018280546104a990613132565b80156104f65780601f106104cb576101008083540402835291602001916104f6565b820191906000526020600020905b8154815290600101906020018083116104d957829003601f168201915b5050505050815250509050919050565b6000600181111561051a57610519613163565b5b600960009054906101000a900460ff16600181111561053c5761053b613163565b5b1461057c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610573906131ef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000826040516105a491906130ec565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461062c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106239061325b565b60405180910390fd5b6006819080600181540180825580915050600190039060005260206000200160009091909190915090816106609190613427565b50600073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036108bf5733600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600061080e91906124d9565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819080600181540180825580915050600190039060005260206000200160009091909190915090816108829190613427565b507faa66ab936168352c3ceec0936784009b98fff8330552a84dbec0ef7b8bcd6873336040516108b29190613508565b60405180910390a161096c565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819080600181540180825580915050600190039060005260206000200160009091909190915090816109339190613427565b507f13bc0fcf14f8f3ca0cb562786d0618c57a13e52bbdb4c041763d96acbfa07624336040516109639190613508565b60405180910390a15b60008067ffffffffffffffff81111561098857610987612751565b5b6040519080825280602002602001820160405280156109b65781602001602082028036833780820191505090505b50905060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001828152506000836040516109f491906130ec565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610a659291906124fa565b509050507ff866739ea10ca100bc6c13c9c14f5d62f2bea1919a42d92e4bc3e98fbeba621e3383604051610a9a92919061355c565b60405180910390a15050565b60006001811115610aba57610ab9613163565b5b600960009054906101000a900460ff166001811115610adc57610adb613163565b5b14610b1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b13906131ef565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba3906135fe565b60405180910390fd5b806008819055507ff347ee99503bf19c028bd6b18f3c676e82a9bb5b2bb5225aebe0fd62fd6a0d1981604051610be29190612df7565b60405180910390a150565b610bf5612584565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610d70578382906000526020600020018054610ce390613132565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0f90613132565b8015610d5c5780601f10610d3157610100808354040283529160200191610d5c565b820191906000526020600020905b815481529060010190602001808311610d3f57829003601f168201915b505050505081526020019060010190610cc4565b5050505081525050905090565b610d856125bb565b600082604051610d9591906130ec565b90815260200160405180910390206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020018280548015610e8957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610e3f575b5050505050815250509050919050565b6000610eb360405180602001604052806000815250611532565b50905080610ef6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eed9061366a565b60405180910390fd5b80610f625747600580549050600960009054906101000a900460ff166001811115610f2457610f23613163565b5b6040517f50ca6743000000000000000000000000000000000000000000000000000000008152600401610f599392919061368a565b60405180910390fd5b6001600960006101000a81548160ff02191690836001811115610f8857610f87613163565b5b021790555060006005805480602002602001604051908101604052809291908181526020016000905b8282101561105d578382906000526020600020018054610fd090613132565b80601f0160208091040260200160405190810160405280929190818152602001828054610ffc90613132565b80156110495780601f1061101e57610100808354040283529160200191611049565b820191906000526020600020905b81548152906001019060200180831161102c57829003601f168201915b505050505081526020019060010190610fb1565b50505050905060006003549050600080835167ffffffffffffffff81111561108857611087612751565b5b6040519080825280602002602001820160405280156110bb57816020015b60608152602001906001900390816110a65790505b50905060005b845181101561117a5760008582815181106110df576110de6136c1565b5b6020026020010151905060006002826040516110fb91906130ec565b908152602001604051809103902090504281600701541115611149578184868151811061112b5761112a6136c1565b5b602002602001018190525084806111419061371f565b95505061116b565b8060040154816002015461115d9190613767565b86611168919061379b565b95505b505080806001019150506110c1565b5080518210156112415760008267ffffffffffffffff8111156111a05761119f612751565b5b6040519080825280602002602001820160405280156111d357816020015b60608152602001906001900390816111be5790505b50905060005b83811015611227578281815181106111f4576111f36136c1565b5b602002602001015182828151811061120f5761120e6136c1565b5b602002602001018190525080806001019150506111d9565b50806005908051906020019061123e9291906125eb565b50505b826003819055506000600960006101000a81548160ff0219169083600181111561126e5761126d613163565b5b021790555050505050505050565b600060018111156112905761128f613163565b5b600960009054906101000a900460ff1660018111156112b2576112b1613163565b5b146112f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e9906131ef565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611382576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611379906135fe565b60405180910390fd5b6064604660035461139391906137cf565b61139d9190613840565b8111156113df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d6906138bd565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611425573d6000803e3d6000fd5b5080600360008282546114389190613767565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fd6f42bc80d79f51c5ffb3438f457e9355868cd0f02ccdd4d946494f962f4ac07826040516114859190612df7565b60405180910390a250565b60003373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611522576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611519906135fe565b60405180910390fd5b600354905090565b600042905090565b600060606000600960009054906101000a900460ff16600181111561155a57611559613163565b5b6000600181111561156e5761156d613163565b5b14905060007f0000000000000000000000000000000000000000000000000000000000000000600754426115a29190613767565b119050600080600580549050119050600080471190508280156115c25750835b80156115cb5750805b80156115d45750815b9550856040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152509550955050505050915091565b6000600181111561162e5761162d613163565b5b600960009054906101000a900460ff1660018111156116505761164f613163565b5b14611690576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611687906131ef565b60405180910390fd5b803373ffffffffffffffffffffffffffffffffffffffff166002826040516116b891906130ec565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611740576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117379061394f565b60405180910390fd5b600060028360405161175291906130ec565b9081526020016040518091039020905060008160020154116117a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a0906139bb565b60405180910390fd5b42816007015410156117f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e790613a27565b60405180910390fd5b806001015481600301541061183a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183190613a93565b60405180910390fd5b6000816001015482600201546118509190613840565b90508160030160008154809291906118679061371f565b91905055508160010154826003015403611b8a5760006005805480602002602001604051908101604052809291908181526020016000905b8282101561194b5783829060005260206000200180546118be90613132565b80601f01602080910402602001604051908101604052809291908181526020018280546118ea90613132565b80156119375780601f1061190c57610100808354040283529160200191611937565b820191906000526020600020905b81548152906001019060200180831161191a57829003601f168201915b50505050508152602001906001019061189f565b5050505090506000600182516119619190613767565b67ffffffffffffffff81111561197a57611979612751565b5b6040519080825280602002602001820160405280156119ad57816020015b60608152602001906001900390816119985790505b5090506000805b8351811015611a8057876040516020016119ce91906130ec565b604051602081830303815290604052805190602001208482815181106119f7576119f66136c1565b5b6020026020010151604051602001611a0f91906130ec565b6040516020818303038152906040528051906020012014611a7357838181518110611a3d57611a3c6136c1565b5b6020026020010151838381518110611a5857611a576136c1565b5b6020026020010181905250600182611a70919061379b565b91505b80806001019150506119b4565b508160059080519060200190611a979291906125eb565b50600085600401548660020154611aae9190613767565b905080866004016000828254611ac4919061379b565b9250508190555060018660060160006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611b2e573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167fd867cfadc420a62f8ddbfaf0ee08af17bef908fdeb647de660511cebe642486c8760020154604051611b799190612df7565b60405180910390a250505050611c41565b80826004016000828254611b9e919061379b565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611beb573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167ff43bfc498688ec8f5ca2efe35ba87cb7b4f33c139cb2dc8e3f795527e3f08ccc836003015483604051611c38929190613ab3565b60405180910390a25b50505050565b60008060085490508091505090565b60606006805480602002602001604051908101604052809291908181526020016000905b82821015611d26578382906000526020600020018054611c9990613132565b80601f0160208091040260200160405190810160405280929190818152602001828054611cc590613132565b8015611d125780601f10611ce757610100808354040283529160200191611d12565b820191906000526020600020905b815481529060010190602001808311611cf557829003601f168201915b505050505081526020019060010190611c7a565b50505050905090565b60006001811115611d4357611d42613163565b5b600960009054906101000a900460ff166001811115611d6557611d64613163565b5b14611da5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9c906131ef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600082604051611dcd91906130ec565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611e55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4c90613b28565b60405180910390fd5b600854341015611e9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9190613bba565b60405180910390fd5b6000600283604051611eac91906130ec565b90815260200160405180910390206002015414611efe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ef590613c26565b60405180910390fd5b600582908060018154018082558091505060019003906000526020600020016000909190919091509081611f329190613427565b5060006064603234611f4491906137cf565b611f4e9190613840565b905060008134611f5e9190613767565b9050600062093a8042611f71919061379b565b905082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254611fc5919061379b565b92505081905550600084604051611fdc91906130ec565b9081526020016040518091039020600101339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600581526020018381526020016000815260200160008152602001428152602001600015158152602001828152602001858152506002866040516120ba91906130ec565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e082015181600701556101008201518160080190816121819190613427565b509050503373ffffffffffffffffffffffffffffffffffffffff167f1423e2a671bcc71c56f3c3cb78e3c96473d3ca5eb061acd0b93d1d0a6617f658836040516121cb9190612df7565b60405180910390a25050505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010154821115612264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161225b90613cb8565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146122f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122ed90613d24565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561233c573d6000803e3d6000fd5b50818160010160008282546123519190613767565b9250508190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201548160010155600282018160020190805461241f929190612644565b509050503373ffffffffffffffffffffffffffffffffffffffff167f3418edea3cedd14ff3ff0e4b7a89699efa06ed87c31c8e3b75b2c6a020c68f2d836040516124699190612df7565b60405180910390a25050565b604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001606081525090565b50805460008255906000526020600020908101906124f791906126a1565b50565b828054828255906000526020600020908101928215612573579160200282015b828111156125725782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061251a565b5b50905061258091906126c5565b5090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b828054828255906000526020600020908101928215612633579160200282015b828111156126325782518290816126229190613427565b509160200191906001019061260b565b5b50905061264091906126a1565b5090565b8280548282559060005260206000209081019282156126905760005260206000209182015b8281111561268f578282908161267f9190613d5a565b5091600101919060010190612669565b5b50905061269d91906126a1565b5090565b5b808211156126c157600081816126b891906126e2565b506001016126a2565b5090565b5b808211156126de5760008160009055506001016126c6565b5090565b5080546126ee90613132565b6000825580601f10612700575061271f565b601f01602090049060005260206000209081019061271e91906126c5565b5b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61278982612740565b810181811067ffffffffffffffff821117156127a8576127a7612751565b5b80604052505050565b60006127bb612722565b90506127c78282612780565b919050565b600067ffffffffffffffff8211156127e7576127e6612751565b5b6127f082612740565b9050602081019050919050565b82818337600083830152505050565b600061281f61281a846127cc565b6127b1565b90508281526020810184848401111561283b5761283a61273b565b5b6128468482856127fd565b509392505050565b600082601f83011261286357612862612736565b5b813561287384826020860161280c565b91505092915050565b6000602082840312156128925761289161272c565b5b600082013567ffffffffffffffff8111156128b0576128af612731565b5b6128bc8482850161284e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006128f0826128c5565b9050919050565b612900816128e5565b82525050565b6000819050919050565b61291981612906565b82525050565b60008115159050919050565b6129348161291f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612974578082015181840152602081019050612959565b60008484015250505050565b600061298b8261293a565b6129958185612945565b93506129a5818560208601612956565b6129ae81612740565b840191505092915050565b6000610120830160008301516129d260008601826128f7565b5060208301516129e56020860182612910565b5060408301516129f86040860182612910565b506060830151612a0b6060860182612910565b506080830151612a1e6080860182612910565b5060a0830151612a3160a0860182612910565b5060c0830151612a4460c086018261292b565b5060e0830151612a5760e0860182612910565b50610100830151848203610100860152612a718282612980565b9150508091505092915050565b60006020820190508181036000830152612a9881846129b9565b905092915050565b612aa981612906565b8114612ab457600080fd5b50565b600081359050612ac681612aa0565b92915050565b600060208284031215612ae257612ae161272c565b5b6000612af084828501612ab7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612b318383612980565b905092915050565b6000602082019050919050565b6000612b5182612af9565b612b5b8185612b04565b935083602082028501612b6d85612b15565b8060005b85811015612ba95784840389528151612b8a8582612b25565b9450612b9583612b39565b925060208a01995050600181019050612b71565b50829750879550505050505092915050565b6000606083016000830151612bd360008601826128f7565b506020830151612be66020860182612910565b5060408301518482036040860152612bfe8282612b46565b9150508091505092915050565b60006020820190508181036000830152612c258184612bbb565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612c6583836128f7565b60208301905092915050565b6000602082019050919050565b6000612c8982612c2d565b612c938185612c38565b9350612c9e83612c49565b8060005b83811015612ccf578151612cb68882612c59565b9750612cc183612c71565b925050600181019050612ca2565b5085935050505092915050565b6000604083016000830151612cf460008601826128f7565b5060208301518482036020860152612d0c8282612c7e565b9150508091505092915050565b60006020820190508181036000830152612d338184612cdc565b905092915050565b600080fd5b600080fd5b60008083601f840112612d5b57612d5a612736565b5b8235905067ffffffffffffffff811115612d7857612d77612d3b565b5b602083019150836001820283011115612d9457612d93612d40565b5b9250929050565b60008060208385031215612db257612db161272c565b5b600083013567ffffffffffffffff811115612dd057612dcf612731565b5b612ddc85828601612d45565b92509250509250929050565b612df181612906565b82525050565b6000602082019050612e0c6000830184612de8565b92915050565b600067ffffffffffffffff821115612e2d57612e2c612751565b5b612e3682612740565b9050602081019050919050565b6000612e56612e5184612e12565b6127b1565b905082815260208101848484011115612e7257612e7161273b565b5b612e7d8482856127fd565b509392505050565b600082601f830112612e9a57612e99612736565b5b8135612eaa848260208601612e43565b91505092915050565b600060208284031215612ec957612ec861272c565b5b600082013567ffffffffffffffff811115612ee757612ee6612731565b5b612ef384828501612e85565b91505092915050565b612f058161291f565b82525050565b600081519050919050565b600082825260208201905092915050565b6000612f3282612f0b565b612f3c8185612f16565b9350612f4c818560208601612956565b612f5581612740565b840191505092915050565b6000604082019050612f756000830185612efc565b8181036020830152612f878184612f27565b90509392505050565b600082825260208201905092915050565b6000612fac82612af9565b612fb68185612f90565b935083602082028501612fc885612b15565b8060005b858110156130045784840389528151612fe58582612b25565b9450612ff083612b39565b925060208a01995050600181019050612fcc565b50829750879550505050505092915050565b600060208201905081810360008301526130308184612fa1565b905092915050565b6000806040838503121561304f5761304e61272c565b5b600083013567ffffffffffffffff81111561306d5761306c612731565b5b6130798582860161284e565b925050602083013567ffffffffffffffff81111561309a57613099612731565b5b6130a68582860161284e565b9150509250929050565b600081905092915050565b60006130c68261293a565b6130d081856130b0565b93506130e0818560208601612956565b80840191505092915050565b60006130f882846130bb565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061314a57607f821691505b60208210810361315d5761315c613103565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f436f6e747261637420697320696e2055706b6565700000000000000000000000600082015250565b60006131d9601583613192565b91506131e4826131a3565b602082019050919050565b60006020820190508181036000830152613208816131cc565b9050919050565b7f50726f6475637420416c72656164792045786973747300000000000000000000600082015250565b6000613245601683613192565b91506132508261320f565b602082019050919050565b6000602082019050818103600083015261327481613238565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026132dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826132a0565b6132e786836132a0565b95508019841693508086168417925050509392505050565b6000819050919050565b600061332461331f61331a84612906565b6132ff565b612906565b9050919050565b6000819050919050565b61333e83613309565b61335261334a8261332b565b8484546132ad565b825550505050565b600090565b61336761335a565b613372818484613335565b505050565b5b818110156133965761338b60008261335f565b600181019050613378565b5050565b601f8211156133db576133ac8161327b565b6133b584613290565b810160208510156133c4578190505b6133d86133d085613290565b830182613377565b50505b505050565b600082821c905092915050565b60006133fe600019846008026133e0565b1980831691505092915050565b600061341783836133ed565b9150826002028217905092915050565b6134308261293a565b67ffffffffffffffff81111561344957613448612751565b5b6134538254613132565b61345e82828561339a565b600060209050601f831160018114613491576000841561347f578287015190505b613489858261340b565b8655506134f1565b601f19841661349f8661327b565b60005b828110156134c7578489015182556001820191506020850194506020810190506134a2565b868310156134e457848901516134e0601f8916826133ed565b8355505b6001600288020188555050505b505050505050565b613502816128e5565b82525050565b600060208201905061351d60008301846134f9565b92915050565b600061352e8261293a565b6135388185613192565b9350613548818560208601612956565b61355181612740565b840191505092915050565b600060408201905061357160008301856134f9565b81810360208301526135838184613523565b90509392505050565b7f4f6e6c792074686520706c6174666f726d2077616c6c65742063616e2070657260008201527f666f726d207468697320616374696f6e00000000000000000000000000000000602082015250565b60006135e8603083613192565b91506135f38261358c565b604082019050919050565b60006020820190508181036000830152613617816135db565b9050919050565b7f55706b656570206e6f74206e6565646564000000000000000000000000000000600082015250565b6000613654601183613192565b915061365f8261361e565b602082019050919050565b6000602082019050818103600083015261368381613647565b9050919050565b600060608201905061369f6000830186612de8565b6136ac6020830185612de8565b6136b96040830184612de8565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061372a82612906565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361375c5761375b6136f0565b5b600182019050919050565b600061377282612906565b915061377d83612906565b9250828203905081811115613795576137946136f0565b5b92915050565b60006137a682612906565b91506137b183612906565b92508282019050808211156137c9576137c86136f0565b5b92915050565b60006137da82612906565b91506137e583612906565b92508282026137f381612906565b9150828204841483151761380a576138096136f0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061384b82612906565b915061385683612906565b92508261386657613865613811565b5b828204905092915050565b7f416d6f756e74206578636565647320636f6c6c65637461626c652066756e6473600082015250565b60006138a7602083613192565b91506138b282613871565b602082019050919050565b600060208201905081810360008301526138d68161389a565b9050919050565b7f4f6e6c79207468652063726561746f722077616c6c65742063616e207065726660008201527f6f726d207468697320616374696f6e0000000000000000000000000000000000602082015250565b6000613939602f83613192565b9150613944826138dd565b604082019050919050565b600060208201905081810360008301526139688161392c565b9050919050565b7f4e6f2066756e6473206c6f636b65640000000000000000000000000000000000600082015250565b60006139a5600f83613192565b91506139b08261396f565b602082019050919050565b600060208201905081810360008301526139d481613998565b9050919050565b7f4d696c6573746f6e652045787069726564000000000000000000000000000000600082015250565b6000613a11601183613192565b9150613a1c826139db565b602082019050919050565b60006020820190508181036000830152613a4081613a04565b9050919050565b7f416c6c206d696c6573746f6e657320616c726561647920636f6d706c65746564600082015250565b6000613a7d602083613192565b9150613a8882613a47565b602082019050919050565b60006020820190508181036000830152613aac81613a70565b9050919050565b6000604082019050613ac86000830185612de8565b613ad56020830184612de8565b9392505050565b7f4e6f2061727469636c6573206578697374000000000000000000000000000000600082015250565b6000613b12601183613192565b9150613b1d82613adc565b602082019050919050565b60006020820190508181036000830152613b4181613b05565b9050919050565b7f53656e7420616d6f756e74206d75737420626520686967686572207468616e2060008201527f656e747279206665650000000000000000000000000000000000000000000000602082015250565b6000613ba4602983613192565b9150613baf82613b48565b604082019050919050565b60006020820190508181036000830152613bd381613b97565b9050919050565b7f5573657220616c7265616479206c6f636b65642066756e647300000000000000600082015250565b6000613c10601983613192565b9150613c1b82613bda565b602082019050919050565b60006020820190508181036000830152613c3f81613c03565b9050919050565b7f416d6f756e74206578636565647320636f6c6c6563746561626c65732066756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b6000613ca2602283613192565b9150613cad82613c46565b604082019050919050565b60006020820190508181036000830152613cd181613c95565b9050919050565b7f416d6f756e74206578636565647320636f6c6c65637465642066756e64730000600082015250565b6000613d0e601e83613192565b9150613d1982613cd8565b602082019050919050565b60006020820190508181036000830152613d3d81613d01565b9050919050565b600081549050613d5381613132565b9050919050565b818103613d68575050613e40565b613d7182613d44565b67ffffffffffffffff811115613d8a57613d89612751565b5b613d948254613132565b613d9f82828561339a565b6000601f831160018114613dce5760008415613dbc578287015490505b613dc6858261340b565b865550613e39565b601f198416613ddc8761327b565b9650613de78661327b565b60005b82811015613e0f57848901548255600182019150600185019450602081019050613dea565b86831015613e2c5784890154613e28601f8916826133ed565b8355505b6001600288020188555050505b5050505050505b56fea26469706673582212204e557e9d0912f5001f0ae4771034d053e453d2b1ceb2f929f565dc8f5c2dbc4964736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 72,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "identifiers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Product_identifiers)40_storage)"
      },
      {
        "astId": 77,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Creator_balance)48_storage)"
      },
      {
        "astId": 82,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "products",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Milestone)67_storage)"
      },
      {
        "astId": 93,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "owner_balance",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 95,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "platformWallet",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 98,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "activeMilestones",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 101,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "activeIdentifiers",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 105,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "s_lastTimeStamp",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 107,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "s_milestone_price",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 160,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "s_milestoneState",
        "offset": 0,
        "slot": "9",
        "type": "t_enum(MileStoneState)34"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(MileStoneState)34": {
        "encoding": "inplace",
        "label": "enum CreatorEconomy.MileStoneState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Creator_balance)48_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CreatorEconomy.Creator_balance)",
        "numberOfBytes": "32",
        "value": "t_struct(Creator_balance)48_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Milestone)67_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct CreatorEconomy.Milestone)",
        "numberOfBytes": "32",
        "value": "t_struct(Milestone)67_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Product_identifiers)40_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct CreatorEconomy.Product_identifiers)",
        "numberOfBytes": "32",
        "value": "t_struct(Product_identifiers)40_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Creator_balance)48_storage": {
        "encoding": "inplace",
        "label": "struct CreatorEconomy.Creator_balance",
        "members": [
          {
            "astId": 42,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 44,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 47,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "identifier_list",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_string_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Milestone)67_storage": {
        "encoding": "inplace",
        "label": "struct CreatorEconomy.Milestone",
        "members": [
          {
            "astId": 50,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 52,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "totalMilestones",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 54,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "totalAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 56,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "milestoneCompleted",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 58,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "amountWithdrawn",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 60,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "createdAt",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 62,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "isCompleted",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 64,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "endsAt",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 66,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "product",
            "offset": 0,
            "slot": "8",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(Product_identifiers)40_storage": {
        "encoding": "inplace",
        "label": "struct CreatorEconomy.Product_identifiers",
        "members": [
          {
            "astId": 36,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 39,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "fans",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}