{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "interval",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currentBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numPlayers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "raffleState",
          "type": "uint256"
        }
      ],
      "name": "Milestones__UpkeepNotNeeded",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "name": "AllFundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "BalanceCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "BalanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CreatorsWithdrawl",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "milestone",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReleased",
          "type": "uint256"
        }
      ],
      "name": "MilestoneCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "OwnersWithdrawl",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PriceChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "product",
          "type": "string"
        }
      ],
      "name": "ProductCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "changeMileStonePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productId",
          "type": "string"
        }
      ],
      "name": "completeMilestone",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productId",
          "type": "string"
        }
      ],
      "name": "createProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "creatorsWithdrawl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "string[]",
              "name": "identifier_list",
              "type": "string[]"
            }
          ],
          "internalType": "struct CreatorEconomy.Creator_balance",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIdentifiers",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwnerBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productId",
          "type": "string"
        }
      ],
      "name": "getUserMilestoneDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalMilestones",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "milestoneCompleted",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountWithdrawn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isCompleted",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "endsAt",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "product",
              "type": "string"
            }
          ],
          "internalType": "struct CreatorEconomy.Milestone",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "identifier",
          "type": "string"
        }
      ],
      "name": "lockFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ownersWithdrawl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xaaed1a973224767064b56c3aa151998896754539a059806b30f400c5060b6110",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "3605896",
    "logsBloom": "0x
    "blockHash": "0x7ccef533b2f10c9256d71b190b833fa410e157752745727dbc6d6bad87795580",
    "transactionHash": "0xaaed1a973224767064b56c3aa151998896754539a059806b30f400c5060b6110",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "3605896",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    259200,
    "10000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "6f00ea043137dd38d6cf9e535297dc20",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numPlayers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raffleState\",\"type\":\"uint256\"}],\"name\":\"Milestones__UpkeepNotNeeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"AllFundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"BalanceCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"BalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CreatorsWithdrawl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"milestone\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReleased\",\"type\":\"uint256\"}],\"name\":\"MilestoneCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OwnersWithdrawl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PriceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"product\",\"type\":\"string\"}],\"name\":\"ProductCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeMileStonePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"completeMilestone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"createProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"creatorsWithdrawl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"identifier_list\",\"type\":\"string[]\"}],\"internalType\":\"struct CreatorEconomy.Creator_balance\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIdentifiers\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"getUserMilestoneDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalMilestones\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"milestoneCompleted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"endsAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"product\",\"type\":\"string\"}],\"internalType\":\"struct CreatorEconomy.Milestone\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"}],\"name\":\"lockFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ownersWithdrawl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CreatorEconomy.sol\":\"CreatorEconomy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\"},\"contracts/CreatorEconomy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\\\";\\n//import \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n//import \\\"./PriceConverter.sol\\\";\\n//import \\\"hardhat/console.sol\\\";\\nerror Milestones__UpkeepNotNeeded(uint256 currentBalance, uint256 numPlayers, uint256 raffleState);\\n\\n\\ncontract CreatorEconomy is AutomationCompatibleInterface {\\n   \\n    enum MileStoneState {\\n        OPEN,\\n        CALCULATING\\n    } \\n\\n    struct Product_identifiers {\\n        address creator;\\n        address[] fans;\\n    }\\n\\n    struct Creator_balance {\\n        address creator;\\n        uint256 balance;\\n        string[] identifier_list;\\n    }\\n\\n    struct Milestone {\\n        address creator;\\n        uint256 totalMilestones;\\n        uint256 totalAmount;\\n        uint256 milestoneCompleted;\\n        uint256 amountWithdrawn;\\n        uint256 createdAt;\\n        bool isCompleted;\\n        uint256 endsAt;\\n        string product;\\n    }\\n\\n    mapping(string => Product_identifiers) private identifiers; \\n    mapping(address => Creator_balance) private balances; \\n    mapping(string => Milestone) private products;  \\n\\n    uint256 private constant MILESTONE_COUNT = 5;\\n    uint256 private constant PLATFORM_PERCENTAGE = 10; \\n    uint256 private constant CREATOR_PERCENTAGE = 50; \\n    uint256 private owner_balance ;\\n\\n    address private platformWallet;\\n    string[] private activeMilestones;\\n    string[] private activeIdentifiers;\\n\\n    uint256 private immutable i_interval;\\n    uint256 private s_lastTimeStamp;\\n    uint256 private s_milestone_price;\\n\\n    event FundsLocked(address indexed user, uint256 amount);\\n    event MilestoneCompleted(address indexed user, uint256 milestone, uint256 amountReleased);\\n    event AllFundsWithdrawn(address indexed user, uint256 totalAmount);\\n    event OwnersWithdrawl(address indexed creator, uint256 amount);\\n    event PriceChange(uint256 amount);\\n    event BalanceCreated(address creator);\\n    event BalanceUpdated(address creator);\\n    event ProductCreated(address creator, string product);\\n    event CreatorsWithdrawl(address indexed creator, uint256 amount);\\n\\n    MileStoneState private s_milestoneState;\\n\\n    constructor(address _platformWallet, uint256 interval, uint256 price) {\\n        require(_platformWallet != address(0), \\\"Invalid platform wallet\\\");\\n        platformWallet = _platformWallet;\\n        owner_balance = 0;\\n        s_lastTimeStamp = block.timestamp;\\n        i_interval = interval;\\n        s_milestone_price = price;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(platformWallet == msg.sender, \\\"Only the platform wallet can perform this action\\\");\\n        _;\\n    }\\n\\n    modifier onlyFans(string memory productId) {\\n        require(products[productId].creator == msg.sender, \\\"Only the creator wallet can perform this action\\\");\\n        _;\\n    }\\n\\n    modifier whenOpen() {\\n        require(s_milestoneState == MileStoneState.OPEN, \\\"Contract is in Upkeep\\\");\\n        _;\\n    }\\n\\n    function createProduct(string memory productId) external whenOpen() {\\n        require(identifiers[productId].creator != address(0), \\\"Product Already Exists\\\");\\n        activeIdentifiers.push(productId);\\n\\n        if (balances[msg.sender].creator != address(0)){\\n            string[] memory identifier_list = new string[](0);\\n            balances[msg.sender] = Creator_balance({\\n                creator: msg.sender,\\n                balance: 0,\\n                identifier_list:identifier_list\\n            });\\n            emit BalanceCreated(msg.sender);\\n        }else{\\n            Creator_balance storage creator = balances[msg.sender];\\n            string[] memory identifier_list = new string[](creator.identifier_list.length + 1);\\n            identifier_list[identifier_list.length] = productId;\\n            creator.identifier_list = identifier_list;\\n            balances[msg.sender] = creator;\\n            emit BalanceUpdated(msg.sender);\\n        }\\n\\n        address[] memory fansArray = new address[](0);\\n\\n        identifiers[productId] = Product_identifiers({\\n            creator:msg.sender,\\n            fans: fansArray\\n        });\\n\\n        emit ProductCreated(msg.sender, productId);\\n    }\\n\\n    function lockFunds(string memory productId, string memory identifier) external whenOpen() payable {\\n        require(identifiers[identifier].creator != address(0), \\\"No articles exist\\\");\\n        require(msg.value >= s_milestone_price, \\\"Sent amount must be higher than entry fee\\\");\\n        require(products[productId].totalAmount == 0, \\\"User already locked funds\\\");\\n\\n        Product_identifiers storage identified = identifiers[identifier];\\n        Creator_balance storage balance_mapping = balances[identified.creator];\\n\\n        address[] memory newFans = new address[](identified.fans.length + 1);\\n\\n        activeMilestones.push(productId);\\n        uint256 fee = (msg.value * CREATOR_PERCENTAGE) / 100;\\n        uint256 netAmount = msg.value - fee;\\n        uint256 endsAt = block.timestamp + 3600*24*7;\\n\\n        newFans[newFans.length] = msg.sender;\\n        \\n        balance_mapping.balance += fee;\\n        identified.fans = newFans;\\n  \\n        balances[identified.creator] = balance_mapping;\\n        identifiers[productId] = identified;\\n\\n        products[productId] = Milestone({\\n            creator: msg.sender,\\n            totalMilestones: MILESTONE_COUNT, \\n            totalAmount: netAmount,\\n            milestoneCompleted: 0,\\n            amountWithdrawn: 0,\\n            createdAt: block.timestamp,\\n            isCompleted: false,\\n            endsAt: endsAt,\\n            product: identifier\\n        });\\n\\n        emit FundsLocked(msg.sender, netAmount);\\n    }\\n\\n    function checkUpkeep(bytes memory)\\n        public\\n        view\\n        override\\n        returns (bool upkeepNeeded, bytes memory  )\\n    {\\n        bool isOpen = MileStoneState.OPEN == s_milestoneState;\\n        bool timePassed = ((block.timestamp - s_lastTimeStamp) > i_interval);\\n        bool hasActiveMilestones = activeMilestones.length > 0;\\n        bool hasBalance = address(this).balance > 0;\\n        upkeepNeeded = (timePassed && isOpen && hasBalance && hasActiveMilestones);\\n        return (upkeepNeeded, \\\"0x0\\\"); \\n    }  \\n\\n    function performUpkeep(bytes calldata) external override {\\n        (bool upkeepNeeded,) = checkUpkeep(\\\"\\\");\\n         require(upkeepNeeded, \\\"Upkeep not needed\\\");\\n        if (!upkeepNeeded) {\\n            revert Milestones__UpkeepNotNeeded(address(this).balance, activeMilestones.length, uint256(s_milestoneState));\\n        }\\n        s_milestoneState = MileStoneState.CALCULATING;\\n        string[] memory copiedActiveMilestone = activeMilestones;\\n        uint256 temp_owner_balance = owner_balance;\\n        uint256 j;\\n        j = 0;\\n        string[] memory updatedMileStones = new string[](copiedActiveMilestone.length); \\n                \\n        for (uint256 i = 0; i < copiedActiveMilestone.length; i++) {\\n            string memory milestoneId = copiedActiveMilestone[i];\\n            Milestone storage milestone = products[milestoneId];\\n                    \\n            if (milestone.endsAt > block.timestamp) {\\n                updatedMileStones[j] = milestoneId;\\n                j++;\\n            } else {\\n                temp_owner_balance += milestone.totalAmount - milestone.amountWithdrawn;\\n            }\\n        }\\n        if (j < updatedMileStones.length) {\\n            string[] memory resizedMileStones = new string[](j);\\n            for (uint256 i = 0; i < j; i++) {\\n                resizedMileStones[i] = updatedMileStones[i];\\n            }\\n            activeMilestones = resizedMileStones;\\n        }\\n        owner_balance = temp_owner_balance;\\n        s_milestoneState = MileStoneState.OPEN;\\n    }  \\n\\n    function completeMilestone(string memory productId) external whenOpen() onlyFans(productId){\\n        Milestone storage product = products[productId];\\n        require(product.totalAmount > 0, \\\"No funds locked\\\");\\n        require(product.endsAt >= block.timestamp, \\\"Milestone Expired\\\");\\n        require(product.milestoneCompleted < product.totalMilestones, \\\"All milestones already completed\\\");\\n\\n        uint256 milestoneAmount = product.totalAmount / product.totalMilestones;\\n        product.milestoneCompleted++;\\n\\n        if (product.milestoneCompleted == product.totalMilestones) {\\n            string[] memory copiedActiveMilestone = activeMilestones;\\n            string[] memory updatedMileStones = new string[] (copiedActiveMilestone.length - 1);\\n            uint256 j;\\n            j = 0;\\n            for (uint256 i = 0; i < copiedActiveMilestone.length; i++){\\n                if (keccak256(abi.encodePacked(copiedActiveMilestone[i])) != keccak256(abi.encodePacked(productId))) {\\n                    updatedMileStones[j] = copiedActiveMilestone[i];\\n                    j+=1;\\n                }\\n            }\\n            activeMilestones = updatedMileStones;\\n\\n            uint256 remainingAmount = product.totalAmount - product.amountWithdrawn;\\n            product.amountWithdrawn += remainingAmount;\\n            product.isCompleted = true;\\n            payable(msg.sender).transfer(remainingAmount);\\n            emit AllFundsWithdrawn(msg.sender, product.totalAmount);\\n        } else {\\n            product.amountWithdrawn += milestoneAmount;\\n            payable(msg.sender).transfer(milestoneAmount);\\n            emit MilestoneCompleted(msg.sender, product.milestoneCompleted, milestoneAmount);\\n        }\\n    }\\n\\n    function ownersWithdrawl( uint256 amount) external whenOpen() onlyOwner() {\\n        require(amount <= owner_balance * 70 / 100, \\\"Amount exceeds collectable funds\\\");\\n        payable(msg.sender).transfer(amount);\\n        owner_balance -= amount;\\n        emit OwnersWithdrawl(msg.sender, amount);\\n    }\\n\\n    function creatorsWithdrawl( uint256 amount) external {\\n        Creator_balance storage balance = balances[msg.sender];\\n        require(amount <= balance.balance, \\\"Amount exceeds collecteables funds\\\");\\n        require(msg.sender == balance.creator, \\\"Amount exceeds collected funds\\\");\\n        payable(msg.sender).transfer(amount);\\n        balance.balance -= amount;\\n        balances[msg.sender] = balance;\\n        emit CreatorsWithdrawl(msg.sender, amount);\\n    }\\n\\n    function changeMileStonePrice( uint256 amount) external whenOpen() onlyOwner() {\\n        s_milestone_price = amount;\\n        emit PriceChange(amount);\\n    }\\n\\n    function getUserMilestoneDetails(string memory productId) public view returns (Milestone memory) {\\n        return products[productId];\\n    }\\n\\n    function getCurrentTimestamp() public view returns (uint256) {\\n        return block.timestamp;\\n    }\\n\\n    function getOwnerBalance() public view onlyOwner() returns (uint256) {\\n        return owner_balance;\\n    }\\n\\n    function getIdentifiers() public view  returns (string[] memory) {\\n        return activeIdentifiers;\\n    }\\n\\n    function getBalance() public view  returns (Creator_balance memory) {\\n        return balances[msg.sender];\\n    }\\n\\n    function getPrice() public view returns (uint256) {\\n        uint256 minimumUSD =  s_milestone_price; \\n        return minimumUSD ;   \\n    }\\n}\\n\",\"keccak256\":\"0xb8670c02802d2000936efd141167955e25b3a40dea485d760f86135edee96fb3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 72,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "identifiers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Product_identifiers)40_storage)"
      },
      {
        "astId": 77,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Creator_balance)48_storage)"
      },
      {
        "astId": 82,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "products",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Milestone)67_storage)"
      },
      {
        "astId": 93,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "owner_balance",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 95,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "platformWallet",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 98,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "activeMilestones",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 101,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "activeIdentifiers",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 105,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "s_lastTimeStamp",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 107,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "s_milestone_price",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 160,
        "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
        "label": "s_milestoneState",
        "offset": 0,
        "slot": "9",
        "type": "t_enum(MileStoneState)34"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(MileStoneState)34": {
        "encoding": "inplace",
        "label": "enum CreatorEconomy.MileStoneState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Creator_balance)48_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CreatorEconomy.Creator_balance)",
        "numberOfBytes": "32",
        "value": "t_struct(Creator_balance)48_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Milestone)67_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct CreatorEconomy.Milestone)",
        "numberOfBytes": "32",
        "value": "t_struct(Milestone)67_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Product_identifiers)40_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct CreatorEconomy.Product_identifiers)",
        "numberOfBytes": "32",
        "value": "t_struct(Product_identifiers)40_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Creator_balance)48_storage": {
        "encoding": "inplace",
        "label": "struct CreatorEconomy.Creator_balance",
        "members": [
          {
            "astId": 42,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 44,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 47,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "identifier_list",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_string_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Milestone)67_storage": {
        "encoding": "inplace",
        "label": "struct CreatorEconomy.Milestone",
        "members": [
          {
            "astId": 50,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 52,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "totalMilestones",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 54,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "totalAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 56,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "milestoneCompleted",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 58,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "amountWithdrawn",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 60,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "createdAt",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 62,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "isCompleted",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 64,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "endsAt",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 66,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "product",
            "offset": 0,
            "slot": "8",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(Product_identifiers)40_storage": {
        "encoding": "inplace",
        "label": "struct CreatorEconomy.Product_identifiers",
        "members": [
          {
            "astId": 36,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 39,
            "contract": "contracts/CreatorEconomy.sol:CreatorEconomy",
            "label": "fans",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}